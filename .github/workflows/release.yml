name: Release

on:
  release:
    types: [prereleased]
  push:
    branches:
      - main
      - v*
      - dev*
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/*.yml"
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/*.yml"

jobs:
  build:
    strategy:
      matrix:
        # Include amd64 on all platforms.
        goos: [windows, linux, darwin]
        goarch: [amd64, arm64]
      fail-fast: false

    runs-on: ubuntu-latest
    container:
      image: archlinux/archlinux:base-devel
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOARM: ${{ matrix.goarm }}
      CGO_ENABLED: 0

    steps:
      - uses: actions/checkout@v2

      - name: Show workflow information
        id: get_filename
        run: |
          echo "GOOS: $GOOS, GOARCH: $GOARCH"
          echo "::set-output name=ASSET_NAME::$GOOS-$GOARCH"
          echo "ASSET_NAME=$GOOS-$GOARCH" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          pacman -Syu --needed --noconfirm go protobuf wget zip

      - name: Run go generate
        run: |
          unset GOOS
          unset GOARCH
          unset GOARM
          unset CGO_ENABLED
          go generate proto.go
          go generate

      - name: Build V2Ray
        run: |
          mkdir -p build_assets
          go build -v -o build_assets/v2ray -trimpath -ldflags "-s -w -buildid=" ./main
          go build -v -o build_assets/v2ctl -trimpath -ldflags "-s -w -buildid=" -tags confonly ./infra/control/main

      - name: Rename binaries on Windows
        if: matrix.goos == 'windows'
        run: |
          cd build_assets/
          mv v2ray v2ray.exe
          mv v2ctl v2ctl.exe

      - name: Download geo files
        run: |
          wget -O release/config/geoip.dat "https://raw.githubusercontent.com/v2fly/geoip/release/geoip.dat"
          wget -O release/config/geoip-only-cn-private.dat "https://raw.githubusercontent.com/v2fly/geoip/release/geoip-only-cn-private.dat"
          wget -O release/config/geosite.dat "https://raw.githubusercontent.com/v2fly/domain-list-community/release/dlc.dat"

      - name: Prepare package
        run: |
          cp -v ./release/config/*.dat ./build_assets
          cp -v ./release/config/*.json ./build_assets

      - name: Prepare package for Linux
        if: matrix.goos == 'linux'
        run: |
          cp -rv ./release/config/systemd ./build_assets/
          cp -rv ./release/config/sysusers.d ./build_assets/
          cp -rv ./release/config/tmpfiles.d ./build_assets/

      - name: Create ZIP archive
        run: |
          pushd build_assets || exit 1
          zip -9vr ../v2ray-$ASSET_NAME.zip .
          popd || exit 1
          FILE=./v2ray-$ASSET_NAME.zip
          DGST=$FILE.dgst
          openssl dgst -md5    $FILE | sed 's/([^)]*)//g' >>$DGST
          openssl dgst -sha1   $FILE | sed 's/([^)]*)//g' >>$DGST
          openssl dgst -sha256 $FILE | sed 's/([^)]*)//g' >>$DGST
          openssl dgst -sha512 $FILE | sed 's/([^)]*)//g' >>$DGST

      - name: Upload ZIP file to Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: v2ray-${{ steps.get_filename.outputs.ASSET_NAME }}.zip
          path: v2ray-${{ steps.get_filename.outputs.ASSET_NAME }}.zip

      - name: Upload files to GitHub release
        uses: svenstaro/upload-release-action@v2
        if: github.event_name == 'release'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          file: ./v2ray-${{ steps.get_filename.outputs.ASSET_NAME }}.zip*
          tag: ${{ github.ref }}
